// Code generated by protoc-gen-go. DO NOT EDIT.
// source: square.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SquareRequest struct {
	S                    int64    `protobuf:"varint,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRequest) Reset()         { *m = SquareRequest{} }
func (m *SquareRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRequest) ProtoMessage()    {}
func (*SquareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32f3c81857d39439, []int{0}
}

func (m *SquareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRequest.Unmarshal(m, b)
}
func (m *SquareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRequest.Marshal(b, m, deterministic)
}
func (m *SquareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRequest.Merge(m, src)
}
func (m *SquareRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRequest.Size(m)
}
func (m *SquareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRequest proto.InternalMessageInfo

func (m *SquareRequest) GetS() int64 {
	if m != nil {
		return m.S
	}
	return 0
}

type SquareResponse struct {
	Res                  int64    `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareResponse) Reset()         { *m = SquareResponse{} }
func (m *SquareResponse) String() string { return proto.CompactTextString(m) }
func (*SquareResponse) ProtoMessage()    {}
func (*SquareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32f3c81857d39439, []int{1}
}

func (m *SquareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareResponse.Unmarshal(m, b)
}
func (m *SquareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareResponse.Marshal(b, m, deterministic)
}
func (m *SquareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareResponse.Merge(m, src)
}
func (m *SquareResponse) XXX_Size() int {
	return xxx_messageInfo_SquareResponse.Size(m)
}
func (m *SquareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareResponse proto.InternalMessageInfo

func (m *SquareResponse) GetRes() int64 {
	if m != nil {
		return m.Res
	}
	return 0
}

func (m *SquareResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*SquareRequest)(nil), "pb.SquareRequest")
	proto.RegisterType((*SquareResponse)(nil), "pb.SquareResponse")
}

func init() { proto.RegisterFile("square.proto", fileDescriptor_32f3c81857d39439) }

var fileDescriptor_32f3c81857d39439 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0x2c, 0x4d,
	0x2c, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x92, 0xe5, 0xe2,
	0x0d, 0x06, 0x8b, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xf1, 0x70, 0x31, 0x16, 0x4b,
	0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x31, 0x16, 0x2b, 0x99, 0x70, 0xf1, 0xc1, 0xa4, 0x8b, 0x0b,
	0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x04, 0xb8, 0x98, 0x8b, 0x52, 0x61, 0x2a, 0x40, 0x4c, 0x90, 0x48,
	0x6a, 0x51, 0x91, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x88, 0x69, 0x64, 0xc9, 0xc5, 0x06,
	0xd1, 0x25, 0xa4, 0x0f, 0x67, 0x09, 0xea, 0x15, 0x24, 0xe9, 0xa1, 0x58, 0x25, 0x25, 0x84, 0x2c,
	0x04, 0x31, 0x3e, 0x89, 0x0d, 0xec, 0x34, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0xf6,
	0xff, 0x01, 0xaa, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SquareClient is the client API for Square service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SquareClient interface {
	Square(ctx context.Context, in *SquareRequest, opts ...grpc.CallOption) (*SquareResponse, error)
}

type squareClient struct {
	cc *grpc.ClientConn
}

func NewSquareClient(cc *grpc.ClientConn) SquareClient {
	return &squareClient{cc}
}

func (c *squareClient) Square(ctx context.Context, in *SquareRequest, opts ...grpc.CallOption) (*SquareResponse, error) {
	out := new(SquareResponse)
	err := c.cc.Invoke(ctx, "/pb.Square/Square", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SquareServer is the server API for Square service.
type SquareServer interface {
	Square(context.Context, *SquareRequest) (*SquareResponse, error)
}

// UnimplementedSquareServer can be embedded to have forward compatible implementations.
type UnimplementedSquareServer struct {
}

func (*UnimplementedSquareServer) Square(ctx context.Context, req *SquareRequest) (*SquareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Square not implemented")
}

func RegisterSquareServer(s *grpc.Server, srv SquareServer) {
	s.RegisterService(&_Square_serviceDesc, srv)
}

func _Square_Square_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SquareServer).Square(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Square/Square",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SquareServer).Square(ctx, req.(*SquareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Square_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Square",
	HandlerType: (*SquareServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Square",
			Handler:    _Square_Square_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "square.proto",
}
